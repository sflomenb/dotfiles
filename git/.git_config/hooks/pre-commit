#!/usr/bin/env bash

function finish {
    RC="${1:-0}"
    if [[ "${NOT_FIRST_COMMIT}" -eq 0 ]]; then
        git reset -q --hard
        git stash pop -q --index
    fi
    exit ${RC}
}

function validate {
    FILE_NAME="${1}"
    SUFFIX="${2}"
    COMMAND="${3}"
    CLEANUP="${4}"
    EXTRA_CHECK="${5}"
    for FILE in "$(git diff --name-only --diff-filter=ACM --cached -- | grep "${SUFFIX}")"; do
        if [[ -z "${EXTRA_CHECK}" ]] || eval ${EXTRA_CHECK}; then
            if [[ -n "${FILE}" ]]; then
                ${COMMAND} ${FILE} &> /dev/null
                if [[ $? -ne 0 ]]; then
                    echo "Invalid ${FILE_NAME} found" >&2
                    echo "in FILE ${FILE}" >&2
                    ${COMMAND} ${FILE}
                    finish 1
                fi
                [[ -n "${CLEANUP}" ]] && eval ${CLEANUP}
            fi
        fi
    done
}

IS_AMEND="$(ps -ocommand= -p ${PPID} | grep -- 'git commit --amend')"
NOT_FIRST_COMMIT="$(git rev-parse --verify HEAD >/dev/null 2>&1; echo $?)"
if ! [[ -d ".git/rebase-merge" || -d ".git/rebase-apply" ]] \
    && [[ -z "${IS_AMEND}" ]]; then

    # stash all changes but keep index, unless there are no commits
    if [[ "${NOT_FIRST_COMMIT}" -eq 0 ]]; then
        git stash push -m "$(date +"%Y_%m_%d_%I_%M_%p")-pre-commit" -u --keep-index -q
        against=HEAD
    else
        against=4b825dc642cb6eb9a060e54bf8d69288fbee4904
    fi

    if ! git diff-index --check --cached ${against}; then
        echo "Aborting commit due to whitespace errors" >&2
        finish 1
    fi

    validate 'JSON' '.json$' 'python -m json.tool'
    validate 'Python' '.py$' 'python3 -m py_compile' '[[ -e ${FILE}c ]] && rm ${FILE}c'
    for SHL in {bash,zsh}; do
        validate "${SHL}" '.sh$' "${SHL} -n" '' 'head -n 1 ${FILE} | grep -q '${SHL}''
    done
    validate 'Ruby' '.rb$' 'ruby -c'
    validate 'YAML' '.*ya?ml' 'ruby -ryaml -e "YAML.load(STDIN.read)" < '

    finish
else
    echo "Skipping pre-commit hook during rebase"
fi
