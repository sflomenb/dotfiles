#!/usr/bin/env bash

function finish {
    RC="${1:-0}"
    git reset -q --hard
    git stash pop -q --index
    exit ${RC}
}

# stash all changes but keep index
git stash push -u --keep-index -q

if git rev-parse --verify HEAD >/dev/null 2>&1; then
    against=HEAD
else
    against=4b825dc642cb6eb9a060e54bf8d69288fbee4904
fi
if ! git diff-index --check --cached ${against}; then
    echo "Aborting commit due to whitespace errors" >&2
    finish 1
fi

# validate json
for file in "$(git diff --name-only --diff-filter=ACM --cached -- | grep '\.json$')"; do
    if [[ -n "${file}" ]]; then
        python -m json.tool ${file} &> /dev/null
        if [[ $? -ne 0 ]]; then
            echo "Invalid JSON found" >&2
            echo "in file ${file}" >&2
            python -m json.tool ${file}
            finish 1
        fi
    fi
done

# validate python
for file in "$(git diff --name-only --diff-filter=ACM --cached -- | grep '\.py$')"; do
    if [[ -n "${file}" ]]; then
        python -m py_compile ${file} &> /dev/null
        if [[ $? -ne 0 ]]; then
            echo "Invalid Python found" >&2
            echo "in file ${file}" >&2
            python -m py_compile ${file}
            finish 1
        fi
        rm ${file}c
    fi
done

# validate shell scripts
for file in "$(git diff --name-only --diff-filter=ACM --cached -- | grep '\.*sh$')"; do
    for SHL in {bash,zsh}; do
        if [[ -n "${file}" ]]; then
            if head -n 1 | grep "${SHL}"; then
                ${SHL} -n ${file} &> /dev/null
                if [[ $? -ne 0 ]]; then
                    echo "Invalid ${SHL} found" >&2
                    echo "in file ${file}" >&2
                    ${SHL} -n ${file}
                    finish 1
                fi
            fi
        fi
    done
done

# validate ruby
for file in "$(git diff --name-only --diff-filter=ACM --cached -- | grep '.rb$')"; do
    if [[ -n "${file}" ]]; then
        ruby -c ${file} &> /dev/null
        if [[ $? -ne 0 ]]; then
            echo "Invalid Ruby found" >&2
            echo "in file ${file}" >&2
            ruby -c ${file}
            finish 1
        fi
    fi
done

finish
